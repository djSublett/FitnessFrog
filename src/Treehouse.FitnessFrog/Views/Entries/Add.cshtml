

@model Treehouse.FitnessFrog.Models.Entry  //this is an example of a strongly typed view using a Model directive
@using Treehouse.FitnessFrog.Models

@{
    ViewBag.Title = "Add Entry";
}


  @*  var selectListItems = new[]
    {
        new SelectListItem() {Value = "1", Text = "Item 1", Selected = false },
        new SelectListItem() {Value = "2", Text = "Item 2", Selected = true}
    };

    var items = new[]
    {
        new {Id = 1, Name = "Item 1"}, //created a new annonymous object with values
        new {Id = 2, Name = "Item 2" }
};

    var selectListItems = new SelectList(items, "Id", "Name")

    this is how to create a checkbox with values in MVC with the above created Array
<select>
    <option value="1">Item 1</option>
    <option value ="2" selected>Item 2</option> this is selected because it is True ^^
</select>*@


<h2>@ViewBag.Title</h2>

@Html.ValidationSummary("The following errors were found:", new { @class = "alert alert-danger" })<!--the anonymous object creates a class that gives the error message a default red styling-->
<!--you can use this ValidationSummary helper method to  display the required 
    fields to be filled out at the top of the form....or you can display them individually
    with the helper method to display them at the bottom of each field-->

@using (Html.BeginForm())
{

<div class="row">

    <div class="col-md-6">

        @{ 
            var formattedDate = String.Format("{0:}", Model.Date);
        }

        <div class="form-group">
            @Html.LabelFor(m => m.Date, new { @class = "control-label" }) <!--used a Lambda expresion -->
            @Html.TextBoxFor(m => m.Date, "{0:d}", new { @class = "form-control" })<!--the commented out code below-->

            <!--<label for="Date" class="control-label">Date</label>-->
            <!--<input type="text" id="Date" name="Date" class="form-control" value="at.ViewBag.Date" />-->
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ActivityId, new { @class = "control-label" }) 
            @Html.DropDownListFor(m => m.ActivityId, 
                (SelectList)ViewBag.Activities.SelectListItems, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ActivityId) <!--individual validation message method call-->
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Duration, new { @class = "control-label" }) 
            @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Intensity, new { @class = "control-label" }) 
            <div>
                <label class="radio-inline">
                    @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Low) @Entry.IntensityLevel.Low
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Medium) @Entry.IntensityLevel.Medium
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.High) @Entry.IntensityLevel.High
                 <label class="radio-inline"></label>
</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Exclude, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Exclude, new { @class = "form-control" })
        </div>

    </div>

    <div class="col-md-6">

        <div class="form-group">
            @Html.LabelFor(m => m.Notes, new { @class = "control-label" }) 
            @Html.TextArea(m => m.Notes, 14, 20, new { @class = "form-control" })
                         <!--defined the rows(14) and columns(20) needed for the text area-->
        </div>

    </div>

    <div class="col-md-12">
        <div class="pad-top">
            <button type="submit" class="btn btn-success btn-lg margin-right">
                <span class="glyphicon glyphicon-save"></span> Save
            </button>
            <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                <span class="glyphicon glyphicon-remove"></span> Cancel
            </a>
        </div>
    </div>

</div>

}

